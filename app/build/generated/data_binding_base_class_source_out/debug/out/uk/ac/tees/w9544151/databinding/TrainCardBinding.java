// Generated by view binder compiler. Do not edit!
package uk.ac.tees.w9544151.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uk.ac.tees.w9544151.R;

public final class TrainCardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView ivDelete;

  @NonNull
  public final ConstraintLayout root;

  @NonNull
  public final TextView tvTrainName;

  @NonNull
  public final TextView tvTrainNumber;

  @NonNull
  public final TextView tvTrainPath;

  private TrainCardBinding(@NonNull ConstraintLayout rootView, @NonNull AppCompatImageView ivDelete,
      @NonNull ConstraintLayout root, @NonNull TextView tvTrainName,
      @NonNull TextView tvTrainNumber, @NonNull TextView tvTrainPath) {
    this.rootView = rootView;
    this.ivDelete = ivDelete;
    this.root = root;
    this.tvTrainName = tvTrainName;
    this.tvTrainNumber = tvTrainNumber;
    this.tvTrainPath = tvTrainPath;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TrainCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TrainCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.train_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TrainCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivDelete;
      AppCompatImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      ConstraintLayout root = (ConstraintLayout) rootView;

      id = R.id.tvTrainName;
      TextView tvTrainName = ViewBindings.findChildViewById(rootView, id);
      if (tvTrainName == null) {
        break missingId;
      }

      id = R.id.tvTrainNumber;
      TextView tvTrainNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvTrainNumber == null) {
        break missingId;
      }

      id = R.id.tvTrainPath;
      TextView tvTrainPath = ViewBindings.findChildViewById(rootView, id);
      if (tvTrainPath == null) {
        break missingId;
      }

      return new TrainCardBinding((ConstraintLayout) rootView, ivDelete, root, tvTrainName,
          tvTrainNumber, tvTrainPath);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
