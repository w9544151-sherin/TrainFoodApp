// Generated by view binder compiler. Do not edit!
package uk.ac.tees.w9544151.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uk.ac.tees.w9544151.R;

public final class FragmentPlaceOrderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatTextView btnBuy;

  @NonNull
  public final EditText etCoachName;

  @NonNull
  public final EditText etCoachPosition;

  @NonNull
  public final EditText etSeat;

  @NonNull
  public final AppCompatEditText etStop;

  @NonNull
  public final AppCompatEditText etTrain;

  @NonNull
  public final TextView labelChooseStop;

  @NonNull
  public final TextView labelChooseTrain;

  @NonNull
  public final TextView labelDelivery;

  @NonNull
  public final TextView labelGeneral;

  @NonNull
  public final TextView labelReserved;

  @NonNull
  public final TextView labelTotalAmountPaid;

  @NonNull
  public final ConstraintLayout selectionClass;

  @NonNull
  public final TextView tvTotalAmount;

  private FragmentPlaceOrderBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatTextView btnBuy, @NonNull EditText etCoachName,
      @NonNull EditText etCoachPosition, @NonNull EditText etSeat,
      @NonNull AppCompatEditText etStop, @NonNull AppCompatEditText etTrain,
      @NonNull TextView labelChooseStop, @NonNull TextView labelChooseTrain,
      @NonNull TextView labelDelivery, @NonNull TextView labelGeneral,
      @NonNull TextView labelReserved, @NonNull TextView labelTotalAmountPaid,
      @NonNull ConstraintLayout selectionClass, @NonNull TextView tvTotalAmount) {
    this.rootView = rootView;
    this.btnBuy = btnBuy;
    this.etCoachName = etCoachName;
    this.etCoachPosition = etCoachPosition;
    this.etSeat = etSeat;
    this.etStop = etStop;
    this.etTrain = etTrain;
    this.labelChooseStop = labelChooseStop;
    this.labelChooseTrain = labelChooseTrain;
    this.labelDelivery = labelDelivery;
    this.labelGeneral = labelGeneral;
    this.labelReserved = labelReserved;
    this.labelTotalAmountPaid = labelTotalAmountPaid;
    this.selectionClass = selectionClass;
    this.tvTotalAmount = tvTotalAmount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlaceOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlaceOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_place_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlaceOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBuy;
      AppCompatTextView btnBuy = ViewBindings.findChildViewById(rootView, id);
      if (btnBuy == null) {
        break missingId;
      }

      id = R.id.etCoachName;
      EditText etCoachName = ViewBindings.findChildViewById(rootView, id);
      if (etCoachName == null) {
        break missingId;
      }

      id = R.id.etCoachPosition;
      EditText etCoachPosition = ViewBindings.findChildViewById(rootView, id);
      if (etCoachPosition == null) {
        break missingId;
      }

      id = R.id.etSeat;
      EditText etSeat = ViewBindings.findChildViewById(rootView, id);
      if (etSeat == null) {
        break missingId;
      }

      id = R.id.etStop;
      AppCompatEditText etStop = ViewBindings.findChildViewById(rootView, id);
      if (etStop == null) {
        break missingId;
      }

      id = R.id.etTrain;
      AppCompatEditText etTrain = ViewBindings.findChildViewById(rootView, id);
      if (etTrain == null) {
        break missingId;
      }

      id = R.id.labelChooseStop;
      TextView labelChooseStop = ViewBindings.findChildViewById(rootView, id);
      if (labelChooseStop == null) {
        break missingId;
      }

      id = R.id.labelChooseTrain;
      TextView labelChooseTrain = ViewBindings.findChildViewById(rootView, id);
      if (labelChooseTrain == null) {
        break missingId;
      }

      id = R.id.labelDelivery;
      TextView labelDelivery = ViewBindings.findChildViewById(rootView, id);
      if (labelDelivery == null) {
        break missingId;
      }

      id = R.id.labelGeneral;
      TextView labelGeneral = ViewBindings.findChildViewById(rootView, id);
      if (labelGeneral == null) {
        break missingId;
      }

      id = R.id.labelReserved;
      TextView labelReserved = ViewBindings.findChildViewById(rootView, id);
      if (labelReserved == null) {
        break missingId;
      }

      id = R.id.labelTotalAmountPaid;
      TextView labelTotalAmountPaid = ViewBindings.findChildViewById(rootView, id);
      if (labelTotalAmountPaid == null) {
        break missingId;
      }

      id = R.id.selectionClass;
      ConstraintLayout selectionClass = ViewBindings.findChildViewById(rootView, id);
      if (selectionClass == null) {
        break missingId;
      }

      id = R.id.tvTotalAmount;
      TextView tvTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalAmount == null) {
        break missingId;
      }

      return new FragmentPlaceOrderBinding((ConstraintLayout) rootView, btnBuy, etCoachName,
          etCoachPosition, etSeat, etStop, etTrain, labelChooseStop, labelChooseTrain,
          labelDelivery, labelGeneral, labelReserved, labelTotalAmountPaid, selectionClass,
          tvTotalAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
