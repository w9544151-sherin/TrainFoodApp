// Generated by view binder compiler. Do not edit!
package uk.ac.tees.w9544151.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uk.ac.tees.w9544151.R;

public final class FragmentTrainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView addStop;

  @NonNull
  public final AppCompatImageView addSymbol;

  @NonNull
  public final AppCompatTextView addtrain;

  @NonNull
  public final View guideline;

  @NonNull
  public final AppCompatImageView trainList;

  private FragmentTrainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView addStop, @NonNull AppCompatImageView addSymbol,
      @NonNull AppCompatTextView addtrain, @NonNull View guideline,
      @NonNull AppCompatImageView trainList) {
    this.rootView = rootView;
    this.addStop = addStop;
    this.addSymbol = addSymbol;
    this.addtrain = addtrain;
    this.guideline = guideline;
    this.trainList = trainList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTrainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTrainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_train, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTrainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addStop;
      AppCompatImageView addStop = ViewBindings.findChildViewById(rootView, id);
      if (addStop == null) {
        break missingId;
      }

      id = R.id.addSymbol;
      AppCompatImageView addSymbol = ViewBindings.findChildViewById(rootView, id);
      if (addSymbol == null) {
        break missingId;
      }

      id = R.id.addtrain;
      AppCompatTextView addtrain = ViewBindings.findChildViewById(rootView, id);
      if (addtrain == null) {
        break missingId;
      }

      id = R.id.guideline;
      View guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.trainList;
      AppCompatImageView trainList = ViewBindings.findChildViewById(rootView, id);
      if (trainList == null) {
        break missingId;
      }

      return new FragmentTrainBinding((ConstraintLayout) rootView, addStop, addSymbol, addtrain,
          guideline, trainList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
