// Generated by view binder compiler. Do not edit!
package uk.ac.tees.w9544151.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uk.ac.tees.w9544151.R;

public final class FeedbackTileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView feedbackCard;

  @NonNull
  public final TextView tvFeedback;

  @NonNull
  public final TextView tvPassengerName;

  @NonNull
  public final TextView tvRating;

  private FeedbackTileBinding(@NonNull ConstraintLayout rootView, @NonNull CardView feedbackCard,
      @NonNull TextView tvFeedback, @NonNull TextView tvPassengerName, @NonNull TextView tvRating) {
    this.rootView = rootView;
    this.feedbackCard = feedbackCard;
    this.tvFeedback = tvFeedback;
    this.tvPassengerName = tvPassengerName;
    this.tvRating = tvRating;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeedbackTileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeedbackTileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.feedback_tile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeedbackTileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feedback_card;
      CardView feedbackCard = ViewBindings.findChildViewById(rootView, id);
      if (feedbackCard == null) {
        break missingId;
      }

      id = R.id.tvFeedback;
      TextView tvFeedback = ViewBindings.findChildViewById(rootView, id);
      if (tvFeedback == null) {
        break missingId;
      }

      id = R.id.tvPassengerName;
      TextView tvPassengerName = ViewBindings.findChildViewById(rootView, id);
      if (tvPassengerName == null) {
        break missingId;
      }

      id = R.id.tvRating;
      TextView tvRating = ViewBindings.findChildViewById(rootView, id);
      if (tvRating == null) {
        break missingId;
      }

      return new FeedbackTileBinding((ConstraintLayout) rootView, feedbackCard, tvFeedback,
          tvPassengerName, tvRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
